Profile Page COde


import 'package:attaindance_user_aug/User_Session/User.dart';
import 'package:attaindance_user_aug/main.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:slide_to_act/slide_to_act.dart';


class Profilescreen extends StatefulWidget {
  final User? userInfo; // Add this line

  const Profilescreen({Key? key, this.userInfo}) : super(key: key); // Update the constructor

  @override
  State<Profilescreen> createState() => _ProfilescreenState();
}

class _ProfilescreenState extends State<Profilescreen> {
  String dropdownValue = 'User Info'; // Initial dropdown value
  double screenHeight = 0;
  double screenWidth = 0;
  Color primary = const Color(0xffeef444c);





  @override
  Widget build(BuildContext context) {
    screenHeight = MediaQuery.of(context).size.height;
    screenWidth = MediaQuery.of(context).size.width;

    return Scaffold(
      body: SingleChildScrollView(
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // Code for COver Page
              Container(
                margin: const EdgeInsets.only(top: 12,bottom: 3),
                height: 250,
                // width: 360,
                decoration: const BoxDecoration(
                  color: Colors.white,
                  boxShadow: [
                    BoxShadow(
                        color: Colors.black26,
                        blurRadius: 20,
                        offset: Offset(2, 2)
                    ),
                  ],
                  borderRadius: BorderRadius.all(Radius.circular(20)),
                ),
                child: ClipRRect(
                  borderRadius: BorderRadius.circular(10),
                  child: Image.asset(
                    'assets/images/cover1.jpg',
                    height: 20,
                    // width: 00,
                    fit: BoxFit.fitHeight, // Adjust the BoxFit as needed
                  ),

                ),
              ),
              // -----------------------Code for COver Page End --------------------------
              // Code for Profile Page
              // Container(
              //   child: CircleAvatar(
              //         backgroundImage: AssetImage('assets/images/CoverPage.jpg'),
              //         backgroundColor: Colors.greenAccent,
              //         radius: 60,
              //
              //   ),
              // ),
              SizedBox(height: 1,),

                Container(
                  margin: const EdgeInsets.only(top: 2),
                  height: 170,
                  width: 360,
                  decoration: const BoxDecoration(
                    color: Colors.white,
                    boxShadow: [
                      BoxShadow(
                          color: Colors.black26,
                          blurRadius: 10,
                          offset: Offset(2, 2)
                      ),
                    ],
                    borderRadius: BorderRadius.all(Radius.circular(20)),
                  ),
                  child: Row (
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Expanded(
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              crossAxisAlignment: CrossAxisAlignment.center,
                              children: [
                                // Icon(
                                //   Icons.person, // You can use any desired icon from the Icons class
                                //   color: primary,
                                //   size: screenWidth / 20,
                                // ),
                                SizedBox(width: 8), // Add some spacing between the icon and text
                                RichText(text: TextSpan(

                                  text: "${widget.userInfo!.fname} ${widget.userInfo!.lname}",
                                  style: TextStyle(
                                    color: primary,
                                    fontSize: screenWidth / 16,
                                  )
                                ))
                              ],
                            ),
                            SizedBox(height: 10,),

                            Row(
                              children: [
                                SizedBox(width: 1), // Add some spacing between the icon and text
                                Icon(
                                Icons.person, // You can use any desired icon from the Icons class
                                color: primary,
                                size: screenWidth / 20,

                              ),
                                SizedBox(width: 4), // Add some spacing between the icon and text
                                Text(" Employee ID: ${widget.userInfo!.empId}",
                                  style: TextStyle(
                                      fontFamily: "NexaRegular",
                                      fontSize: screenWidth / 20,
                                      color: Colors.black54
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                SizedBox(width: 1), // Add some spacing between the icon and text
                                Icon(
                                  Icons.email, // You can use any desired icon from the Icons class
                                  color: primary,
                                  size: screenWidth / 20,
                                ),
                                SizedBox(width: 4), // Add some spacing between the icon and text

                                Flexible(
                                  child: Text(" Email: ${widget.userInfo!.email}",
                                    style: TextStyle(
                                        fontFamily: "NexaRegular",
                                        fontSize: screenWidth / 20,
                                        color: Colors.black54
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                SizedBox(width: 1), // Add some spacing between the icon and text

                                Icon(
                                  Icons.mobile_friendly_sharp, // You can use any desired icon from the Icons class
                                  color: primary,
                                  size: screenWidth / 20,
                                ),
                                SizedBox(width: 4), // Add some spacing between the icon and text
                                Text(" Mobile: ${widget.userInfo!.mobile}",
                                  style: TextStyle(
                                      fontFamily: "NexaRegular",
                                      fontSize: screenWidth / 20,
                                      color: Colors.black54
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                SizedBox(width: 2), // Add some spacing between the icon and text
                                Icon(
                                  Icons.important_devices, // You can use any desired icon from the Icons class
                                  color: primary,
                                  size: screenWidth / 20,
                                ),
                                SizedBox(width: 3), // Add some spacing between the icon and text
                                Text(" Department: ${widget.userInfo!.departmentName}",
                                  style: TextStyle(
                                      fontFamily: "NexaRegular",
                                      fontSize: screenWidth / 20,
                                      color: Colors.black54
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),

              Container(
                margin: const EdgeInsets.only(top: 100),
                child: Builder(builder: (context) {
                  final GlobalKey<SlideActionState> key = GlobalKey();
                  return Container(
                    // color: widget.outerColor ?? Colors.green, // Set the custom background color here
                    child: SlideAction(
                      text: "Slide to Log Out",
                      textStyle: TextStyle(
                        color: Colors.black54,
                        fontSize: screenWidth / 20,
                        fontFamily: "NexaRegular",
                      ),
                      outerColor: Colors.white,
                      innerColor: primary,
                      key: key,
                      onSubmit: () async {
                        final prefs = await SharedPreferences.getInstance();
                        await prefs.remove('userName');
                        Navigator.pushReplacement(context, MaterialPageRoute(builder: (context) => LoginApp()));
                        key.currentState!.reset(
                        );
                      },
                    ),
                  );
                }),
              )
            ],
          ),
        ),
      ),
    );
  }
}